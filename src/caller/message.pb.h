// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_message_2eproto__INCLUDED
#define PROTOBUF_message_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_message_2eproto();
void protobuf_AssignDesc_message_2eproto();
void protobuf_ShutdownFile_message_2eproto();

class CallerMsg;

enum CallerMsg_Request {
  CallerMsg_Request_REQ_NONE = 0,
  CallerMsg_Request_REQ_INVITE = 1,
  CallerMsg_Request_REQ_ACK = 2,
  CallerMsg_Request_REQ_BYE = 3,
  CallerMsg_Request_REQ_INFO = 4,
  CallerMsg_Request_REQ_ERROR = 5
};
bool CallerMsg_Request_IsValid(int value);
const CallerMsg_Request CallerMsg_Request_Request_MIN = CallerMsg_Request_REQ_NONE;
const CallerMsg_Request CallerMsg_Request_Request_MAX = CallerMsg_Request_REQ_ERROR;
const int CallerMsg_Request_Request_ARRAYSIZE = CallerMsg_Request_Request_MAX + 1;

const ::google::protobuf::EnumDescriptor* CallerMsg_Request_descriptor();
inline const ::std::string& CallerMsg_Request_Name(CallerMsg_Request value) {
  return ::google::protobuf::internal::NameOfEnum(
    CallerMsg_Request_descriptor(), value);
}
inline bool CallerMsg_Request_Parse(
    const ::std::string& name, CallerMsg_Request* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CallerMsg_Request>(
    CallerMsg_Request_descriptor(), name, value);
}
enum CallerMsg_Response {
  CallerMsg_Response_RSP_NONE = 0,
  CallerMsg_Response_RSP_RINGING = 1,
  CallerMsg_Response_RSP_OK = 2,
  CallerMsg_Response_RSP_BUSY = 3
};
bool CallerMsg_Response_IsValid(int value);
const CallerMsg_Response CallerMsg_Response_Response_MIN = CallerMsg_Response_RSP_NONE;
const CallerMsg_Response CallerMsg_Response_Response_MAX = CallerMsg_Response_RSP_BUSY;
const int CallerMsg_Response_Response_ARRAYSIZE = CallerMsg_Response_Response_MAX + 1;

const ::google::protobuf::EnumDescriptor* CallerMsg_Response_descriptor();
inline const ::std::string& CallerMsg_Response_Name(CallerMsg_Response value) {
  return ::google::protobuf::internal::NameOfEnum(
    CallerMsg_Response_descriptor(), value);
}
inline bool CallerMsg_Response_Parse(
    const ::std::string& name, CallerMsg_Response* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CallerMsg_Response>(
    CallerMsg_Response_descriptor(), name, value);
}
// ===================================================================

class CallerMsg : public ::google::protobuf::Message {
 public:
  CallerMsg();
  virtual ~CallerMsg();

  CallerMsg(const CallerMsg& from);

  inline CallerMsg& operator=(const CallerMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CallerMsg& default_instance();

  void Swap(CallerMsg* other);

  // implements Message ----------------------------------------------

  inline CallerMsg* New() const { return New(NULL); }

  CallerMsg* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CallerMsg& from);
  void MergeFrom(const CallerMsg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CallerMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CallerMsg_Request Request;
  static const Request REQ_NONE = CallerMsg_Request_REQ_NONE;
  static const Request REQ_INVITE = CallerMsg_Request_REQ_INVITE;
  static const Request REQ_ACK = CallerMsg_Request_REQ_ACK;
  static const Request REQ_BYE = CallerMsg_Request_REQ_BYE;
  static const Request REQ_INFO = CallerMsg_Request_REQ_INFO;
  static const Request REQ_ERROR = CallerMsg_Request_REQ_ERROR;
  static inline bool Request_IsValid(int value) {
    return CallerMsg_Request_IsValid(value);
  }
  static const Request Request_MIN =
    CallerMsg_Request_Request_MIN;
  static const Request Request_MAX =
    CallerMsg_Request_Request_MAX;
  static const int Request_ARRAYSIZE =
    CallerMsg_Request_Request_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Request_descriptor() {
    return CallerMsg_Request_descriptor();
  }
  static inline const ::std::string& Request_Name(Request value) {
    return CallerMsg_Request_Name(value);
  }
  static inline bool Request_Parse(const ::std::string& name,
      Request* value) {
    return CallerMsg_Request_Parse(name, value);
  }

  typedef CallerMsg_Response Response;
  static const Response RSP_NONE = CallerMsg_Response_RSP_NONE;
  static const Response RSP_RINGING = CallerMsg_Response_RSP_RINGING;
  static const Response RSP_OK = CallerMsg_Response_RSP_OK;
  static const Response RSP_BUSY = CallerMsg_Response_RSP_BUSY;
  static inline bool Response_IsValid(int value) {
    return CallerMsg_Response_IsValid(value);
  }
  static const Response Response_MIN =
    CallerMsg_Response_Response_MIN;
  static const Response Response_MAX =
    CallerMsg_Response_Response_MAX;
  static const int Response_ARRAYSIZE =
    CallerMsg_Response_Response_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Response_descriptor() {
    return CallerMsg_Response_descriptor();
  }
  static inline const ::std::string& Response_Name(Response value) {
    return CallerMsg_Response_Name(value);
  }
  static inline bool Response_Parse(const ::std::string& name,
      Response* value) {
    return CallerMsg_Response_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .CallerMsg.Request req = 1;
  inline bool has_req() const;
  inline void clear_req();
  static const int kReqFieldNumber = 1;
  inline ::CallerMsg_Request req() const;
  inline void set_req(::CallerMsg_Request value);

  // optional .CallerMsg.Response rsp = 2;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 2;
  inline ::CallerMsg_Response rsp() const;
  inline void set_rsp(::CallerMsg_Response value);

  // optional int32 port = 3;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 3;
  inline ::google::protobuf::int32 port() const;
  inline void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:CallerMsg)
 private:
  inline void set_has_req();
  inline void clear_has_req();
  inline void set_has_rsp();
  inline void clear_has_rsp();
  inline void set_has_port();
  inline void clear_has_port();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  int req_;
  int rsp_;
  ::google::protobuf::int32 port_;
  friend void  protobuf_AddDesc_message_2eproto();
  friend void protobuf_AssignDesc_message_2eproto();
  friend void protobuf_ShutdownFile_message_2eproto();

  void InitAsDefaultInstance();
  static CallerMsg* default_instance_;
};
// ===================================================================


// ===================================================================

// CallerMsg

// optional .CallerMsg.Request req = 1;
inline bool CallerMsg::has_req() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CallerMsg::set_has_req() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CallerMsg::clear_has_req() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CallerMsg::clear_req() {
  req_ = 0;
  clear_has_req();
}
inline ::CallerMsg_Request CallerMsg::req() const {
  // @@protoc_insertion_point(field_get:CallerMsg.req)
  return static_cast< ::CallerMsg_Request >(req_);
}
inline void CallerMsg::set_req(::CallerMsg_Request value) {
  assert(::CallerMsg_Request_IsValid(value));
  set_has_req();
  req_ = value;
  // @@protoc_insertion_point(field_set:CallerMsg.req)
}

// optional .CallerMsg.Response rsp = 2;
inline bool CallerMsg::has_rsp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CallerMsg::set_has_rsp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CallerMsg::clear_has_rsp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CallerMsg::clear_rsp() {
  rsp_ = 0;
  clear_has_rsp();
}
inline ::CallerMsg_Response CallerMsg::rsp() const {
  // @@protoc_insertion_point(field_get:CallerMsg.rsp)
  return static_cast< ::CallerMsg_Response >(rsp_);
}
inline void CallerMsg::set_rsp(::CallerMsg_Response value) {
  assert(::CallerMsg_Response_IsValid(value));
  set_has_rsp();
  rsp_ = value;
  // @@protoc_insertion_point(field_set:CallerMsg.rsp)
}

// optional int32 port = 3;
inline bool CallerMsg::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CallerMsg::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CallerMsg::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CallerMsg::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 CallerMsg::port() const {
  // @@protoc_insertion_point(field_get:CallerMsg.port)
  return port_;
}
inline void CallerMsg::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:CallerMsg.port)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::CallerMsg_Request> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CallerMsg_Request>() {
  return ::CallerMsg_Request_descriptor();
}
template <> struct is_proto_enum< ::CallerMsg_Response> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::CallerMsg_Response>() {
  return ::CallerMsg_Response_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_message_2eproto__INCLUDED
